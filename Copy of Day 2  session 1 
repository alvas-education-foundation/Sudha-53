{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Day 2  session 1 ","provenance":[{"file_id":"https://github.com/alvas-education-foundation/Dhavala27/blob/master/Day_2_session_1.ipynb","timestamp":1595507293508}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Fn5Bz3ntOtCM","colab_type":"text"},"source":["#Day 2  session 1 Examples programs\n","#(List and Tuple)"]},{"cell_type":"markdown","metadata":{"id":"ez7qlAjXOrjr","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"oo1ggeOBOq5z","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"V55ZNZp4OxlM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":126},"outputId":"0138fcd3-68e1-469a-c4ea-b4b95ed9d3f2"},"source":["#Program to find the largest number in a list.\n","a=[]\n","n=int(input(\"Enter number of elements:\"))\n","for i in range(1,n+1):\n","    b=int(input(\"Enter element:\"))\n","    a.append(b)\n","a.sort()\n","print(\"Largest element is:\",a[n-1])\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter number of elements:4\n","Enter element:6\n","Enter element:5\n","Enter element:46\n","Enter element:76\n","Largest element is: 76\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZUedjyV7RUH2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":90},"outputId":"f0b828b1-f213-4546-9e70-dc6f613bb8e4"},"source":["#Try this More pythonic  2 lines program equivalent to above codings as shown below !\n","\n","x=0\n","print('The greatest no is',max([int(input(x)) for _ in range(int(input(\"Enter no\")))]))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter no2\n","6\n","7\n","The greatest no is 7\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"aL4rNREdPlKa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":163},"outputId":"fe1cd7b3-14a1-43f1-9593-a24600612264"},"source":["#Python Program to put the even and odd elements in a list into two different lists. \n","a=[]\n","n=int(input(\"Enter number of elements:\"))\n","for i in range(1,n+1):\n","    b=int(input(\"Enter element:\"))\n","    a.append(b)\n","even=[]\n","odd=[]\n","for j in a:\n","    if(j%2==0):\n","        even.append(j)\n","    else:\n","        odd.append(j)\n","print(\"The even list\",even)\n","print(\"The odd list\",odd)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter number of elements:5\n","Enter element:5\n","Enter element:7\n","Enter element:35\n","Enter element:87\n","Enter element:44\n","The even list [44]\n","The odd list [5, 7, 35, 87]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JSa8bdtaRzU-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":145},"outputId":"37cad2b4-3502-4651-d82b-e7752557e759"},"source":["#Instead of  forementioned 14 lines program, the equivalent 4 lines ! \n","#Pythonic program is here ....\n","\n","x=0\n","l=[int(input(x)) for _ in range(int(input(\"Enter n\")))]\n","print('even list is',[ i for i in l if i%2])\n","print('odd list is',[i for i in l if not i%2])\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter n4\n","7\n","3\n","9\n","2\n","even list is [7, 3, 9]\n","odd list is [2]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NKP7yDz5Pv_K","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":217},"outputId":"47c50b70-ee2d-4297-afdf-2fb83c01ef71"},"source":["\n","#Python Program to merge two lists and sort it.\n","a=[]\n","c=[]\n","n1=int(input(\"Enter number of elements:\"))\n","for i in range(1,n1+1):\n","    b=int(input(\"Enter element:\"))\n","    a.append(b)\n","n2=int(input(\"Enter number of elements:\"))\n","for i in range(1,n2+1):\n","    d=int(input(\"Enter element:\"))\n","    c.append(d)\n","new=a+c\n","new.sort()\n","print(\"Sorted list is:\",new)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter number of elements:5\n","Enter element:56\n","Enter element:86\n","Enter element:2\n","Enter element:87\n","Enter element:34\n","Enter number of elements:3\n","Enter element:55\n","Enter element:22\n","Enter element:76\n","Sorted list is: [2, 22, 34, 55, 56, 76, 86, 87]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YZF0yGzHSK5t","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":181},"outputId":"bbed13fb-5c4d-4f33-af0b-cc5bd8b01988"},"source":["#Instead of  forementioned 13 lines program, the equivalent 5 lines !\n","# Pythonic program is here ....\n","\n","x=0\n","l=[int(input(x)) for _ in range(int(input(\"Enter how many elements\")))]\n","m=[int(input(x)) for _ in range(int(input(\"Enter how many elements \")))]\n","new=l+m\n","new.sort()\n","print(\"Sorted list is:\",new)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter how many elements4\n","6\n","3\n","8\n","2\n","Enter how many elements 2\n","6\n","2\n","Sorted list is: [2, 2, 3, 6, 6, 8]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8C2ydEORQHWZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"7221d3fb-8805-47a9-eabd-39e46abac157"},"source":["#Python Program to sort the list according to the second element in the sublist.\n","a=[['A',34],['B',21],['C',26],['E',29]]\n","for i in range(0,len(a)):\n","    for j in range(i+1,len(a)):\n","        if(a[i][1]>a[j][1]):\n","            temp=a[j]\n","            a[j]=a[i]\n","            a[i]=temp\n","print(a)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[['B', 21], ['C', 26], ['E', 29], ['A', 34]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3AFSeGqISet9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"c94e2354-4e9d-454b-baac-bd39db13dd33"},"source":["#Instead of  forementioned 8 lines program, the equivalent 3 lines ! \n","#Pythonic program is here ....\n","\n","a=[['A',34],['B',21],['C',26],['E',29]]\n","a.sort(key = lambda x: x[1]) \n","print(a)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[['B', 21], ['C', 26], ['E', 29], ['A', 34]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2Vxl9p4iQOsJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":126},"outputId":"8feb1c87-6dbc-477f-b594-14f07a789933"},"source":["#Python Program to find the second largest number in a list \n","a=[]\n","n=int(input(\"Enter number of elements:\"))\n","for i in range(1,n+1):\n","    b=int(input(\"Enter element:\"))\n","    a.append(b)\n","for i in range(0,len(a)):\n","    for j in range(0,len(a)-i-1):\n","        if(a[j]>a[j+1]):\n","            temp=a[j]\n","            a[j]=a[j+1]\n","            a[j+1]=temp \n","print('Second largest number is:',a[n-2])\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter number of elements:4\n","Enter element:56\n","Enter element:3387\n","Enter element:33\n","Enter element:99\n","Second largest number is: 99\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gM0Xtkq-SmTF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":108},"outputId":"4cdf1599-6341-4d60-f2ec-051230e3153d"},"source":["#Instead of  forementioned 12 lines program, the equivalent 4 lines ! \n","#Pythonic program is here ....\n","\n","x=0\n","l=[int(input(x)) for _ in range(int(input(\"Enter how many elements\")))]\n","l.sort()\n","print(\"Second largest element is :\",l[-2])\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter how many elements3\n","5\n","8\n","2\n","Second largest element is : 5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y8t0jBxGQazZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":72},"outputId":"4ada8693-b2e7-461e-9e20-7ab1f8553645"},"source":["#Program to create a list of tuples with the first element as the number and the second element as the square of the number. \n","l_range=int(input(\"Enter the lower range:\"))\n","u_range=int(input(\"Enter the upper range:\"))\n","a=[(x,x**2) for x in range(l_range,u_range+1)]\n","print(a)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter the lower range:3\n","Enter the upper range:8\n","[(3, 9), (4, 16), (5, 25), (6, 36), (7, 49), (8, 64)]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3LkCKDYESxPk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":126},"outputId":"b1de6b43-f174-4bd7-cdb6-5cbc5bed2749"},"source":["#The aforementioned program is already pythonic. \n","#We can still make it more pythonic as follows \n"," \n","a=[(x,x**2) for x in range(int(input(\"Enter the lower range:\")),\\\n","                           int(input(\"Enter the upper range:\"))+1)]\n","print(a)\n","\n","# Of course, We can write in the most pythonic way with one line ! as follows\n","\n","print([(x,x**2) for x in range(int(input(\"Enter the lower range:\")),\\\n","                           int(input(\"Enter the upper range:\"))+1)])\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter the lower range:4\n","Enter the upper range:9\n","[(4, 16), (5, 25), (6, 36), (7, 49), (8, 64), (9, 81)]\n","Enter the lower range:3\n","Enter the upper range:8\n","[(3, 9), (4, 16), (5, 25), (6, 36), (7, 49), (8, 64)]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TtaW_vPsTAA5","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rRosv9XyQikw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"6bb3a934-1f5d-41b7-9191-2e98f0564f86"},"source":["#Python Program to generate random numbers from 1 to 20 and append them to the list.\n","\n","import random\n","a=[]\n","n=int(input(\"Enter number of elements:\"))\n","for j in range(n):\n","    a.append(random.randint(1,20))\n","print('Randomised list is: ',a)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter number of elements:3\n","Randomised list is:  [4, 3, 8]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"6d-IT0x8Qr4C","colab_type":"text"},"source":["#Tuple Examples"]},{"cell_type":"code","metadata":{"id":"7QK4IJnuQyUJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"4342a072-6a04-485b-a1de-d8ca2a3c1563"},"source":["#Write python program to have a list of words  to sort them from longest to shortest using list of tuples\n"," \n","txt = 'but soft what light in yonder window breaks'\n","words = txt.split()\n","t = list()\n","for word in words:\n","   t.append((len(word), word))\n","t.sort(reverse=True)\n","\n","res = list()\n","for length, word in t:\n","    res.append(word)\n","\n","print(res)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['yonder', 'window', 'breaks', 'light', 'what', 'soft', 'but', 'in']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1n4cTMJwQ5xQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"04df9c1a-3dfe-4a5e-ea1a-15924fa3ddd9"},"source":["#Write python program to have a list of words  to sort them from longest to shortest using list of tuples\n"," \n","txt = 'but soft what light in yonder window breaks'\n","words = txt.split()\n","t = list()\n","for word in words:\n","   t.append((len(word), word))\n","t.sort(reverse=True)\n","\n","res = list()\n","for length, word in t:\n","    res.append(word)\n","\n","print(res)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['yonder', 'window', 'breaks', 'light', 'what', 'soft', 'but', 'in']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5mqKmrNURCIg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"2c0f2dcb-e935-4f05-f3cd-5b286d1fef28"},"source":["#Python program that assigns variables\n","\n","# Create packed tuple.\n","pair = (\"dog\", \"cat\")\n","\n","# Unpack tuple.\n","(key, value) = pair\n","\n","# Display unpacked variables.\n","print(key)\n","print(value)\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["dog\n","cat\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3h7gFT6dRIxh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"9fb7da72-05d2-45dd-abd4-4fa7aedd751a"},"source":["#Python program that searches tuples\n","pair = (\"dog\", \"cat\")\n","\n","# Search for a value.\n","if \"cat\" in pair:\n","    print(\"Cat found\")\n","\n","# Search for a value not present.\n","if \"bird\" not in pair:\n","    print(\"Bird not found\")\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Cat found\n","Bird not found\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"5iUaNKGQTFoF","colab_type":"text"},"source":["#List  exercises"]},{"cell_type":"code","metadata":{"id":"kvjhAVhYTNYK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":55},"outputId":"e7efa421-891e-4d5f-e6ef-a8dbb7b5b42d"},"source":["#1. print multiples of 3 upto 200 using a list\n","\n","def multiple(m, n): \n","    a = range(n, (m * n)+1, n)   \n","    print(*a)   \n","m = 66\n","n = 3\n","multiple(m, n)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3 6 9 12 15 18 21 24 27 30 33 36 39 42 45 48 51 54 57 60 63 66 69 72 75 78 81 84 87 90 93 96 99 102 105 108 111 114 117 120 123 126 129 132 135 138 141 144 147 150 153 156 159 162 165 168 171 174 177 180 183 186 189 192 195 198\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Ro_QzmwdTSQg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"00c09c14-3371-40b4-8a59-d2dc797e0b13"},"source":["#2. print the nos only divisable by 5 and 7 between 1000 and 2000 using a list( both inclusive)\n","\n","nl=[]\n","for x in range(1000, 2000):\n","    if (x%7==0) and (x%5==0):\n","        nl.append(str(x))\n","print (','.join(nl))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1015,1050,1085,1120,1155,1190,1225,1260,1295,1330,1365,1400,1435,1470,1505,1540,1575,1610,1645,1680,1715,1750,1785,1820,1855,1890,1925,1960,1995\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"urVs1ufKTt4e","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":126},"outputId":"53cdfc5f-5f72-42e5-b445-2db048374cd4"},"source":["#4. Print  perfect squares and divisible by 5 between 500 and 1000( (both inclusive) using list\n","lower=int(input(\"Enter lower range limit:\"))\n","upper=int(input(\"Enter upper range limit:\"))\n","n=int(input(\"Enter the number to be divided by:\"))\n","for i in range(lower,upper+1):\n","    if(i%n==0):\n","        print(i)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter lower range limit:4\n","Enter upper range limit:8\n","Enter the number to be divided by:2\n","4\n","6\n","8\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"HbkmH3L7T-DW","colab_type":"text"},"source":["#Tuple exercises"]},{"cell_type":"code","metadata":{"id":"_DsoVEi2UAX-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":72},"outputId":"a025b0c3-2245-4c37-9052-279b6a8fa4ba"},"source":["#1. Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number \n","l_range=int(input(\"Enter the lower range:\"))\n","u_range=int(input(\"Enter the upper range:\"))\n","a=[(x,x**2) for x in range(l_range,u_range+1)]\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter the lower range:4\n","Enter the upper range:8\n","[(4, 16), (5, 25), (6, 36), (7, 49), (8, 64)]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"e_dabbkZUEzf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"650107e8-1b07-4c57-81c1-e8cd408ff329"},"source":["#2. Write python program to have a list of words  to sort them from  shortest to longest using list of tuples\n","# Python program to sort a list of \n","# tuples by the second Item using sort()  \n","  \n","# Function to sort hte list by second item of tuple \n","def Sort_Tuple(tup):  \n","  \n","    # reverse = None (Sorts in Ascending order)  \n","    # key is set to sort using second element of  \n","    # sublist lambda has been used  \n","    tup.sort(key = lambda x: x[1])  \n","    return tup  \n","  \n","# Driver Code  \n","tup = [('rishav', 10), ('akash', 5), ('ram', 20), ('gaurav', 15)]  \n","  \n","# printing the sorted list of tuples \n","print(Sort_Tuple(tup))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[('akash', 5), ('rishav', 10), ('gaurav', 15), ('ram', 20)]\n"],"name":"stdout"}]}]}